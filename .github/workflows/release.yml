name: release

on:
  push:
    tags:
      - "v*.*.*"

env:
  PYTHON_VERSION: "3.11"

permissions:
  contents: write

jobs:
  pypi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Vendor runner into package
        run: cp run-miqa.py miqa_offline/_run_miqa.py
      - run: python -m pip install --upgrade pip build twine
      - run: python -m build
      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*

  binaries:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          # Install your package so PyInstaller can analyze imports
          pip install .
          pip install pyinstaller
      - name: Build single-file binary
        shell: bash
        run: |
          pyinstaller -F -n miqa-offline run-miqa.py
          OUT="dist/miqa-offline"
          if [[ "$RUNNER_OS" == "Windows" ]]; then OUT="dist/miqa-offline.exe"; fi
          echo "OUT=$OUT" >> $GITHUB_ENV
      - name: Upload binary to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.OUT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Publish Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: meta
        run: |
          REF="${GITHUB_REF##*/}"      # e.g. v0.2.0
          VER="${REF#v}"               # 0.2.0
          echo "ver=$VER" >> $GITHUB_OUTPUT

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            magnalabs/miqa-offline-test-kickoff:latest
            magnalabs/miqa-offline-test-kickoff:${{ steps.meta.outputs.ver }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
